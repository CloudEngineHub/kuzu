-NAME IC1
-QUERY MATCH (p:Person {id: 933}), (friend:Person {firstName: 'Michael'})
              WHERE NOT p=friend
              WITH p, friend
              MATCH path = (p)-[:KNOWS* shortest 1..3]-(friend)
              WITH min(length(path)) AS distance, friend
       ORDER BY
           distance ASC,
           friend.lastName ASC,
           friend.id ASC
       LIMIT 20
       MATCH (friend)-[:personIsLocatedIn]->(friendCity:City)
       OPTIONAL MATCH (friend)-[studyAt:studyAt]->(uni:University)-[:organisationIsLocatedIn]->(uniCity:City)
       WITH friend, collect(
           CASE uni.name
               WHEN null THEN null
               ELSE [uni.name, studyAt.classYear, uniCity.name]
           END ) AS unis, friendCity, distance
       OPTIONAL MATCH (friend)-[workAt:workAt]->(company:Company)-[:organisationIsLocatedIn]->(companyCountry:Country)
       WITH friend, collect(
           CASE company.name
               WHEN null THEN null
               ELSE [company.name, workAt.workFrom, companyCountry.name]
           END ) AS companies, unis, friendCity, distance
       RETURN
           friend.id AS friendId,
           friend.lastName AS friendLastName,
           distance AS distanceFromPerson,
           friend.birthday AS friendBirthday,
           friend.creationDate AS friendCreationDate,
           friend.gender AS friendGender,
           friend.browserUsed AS friendBrowserUsed,
           friend.locationIP AS friendLocationIp,
           friend.email AS friendEmails,
           friend.speaks AS friendLanguages,
           friendCity.name AS friendCityName,
           unis AS friendUniversities,
           companies AS friendCompanies
       ORDER BY
           distanceFromPerson ASC,
           friendLastName ASC,
           friendId ASC
       LIMIT 20
---- 1
